var suggestions=document.getElementById("suggestions"),search=document.getElementById("search");search!==null&&document.addEventListener("keydown",inputFocus);function inputFocus(e){e.ctrlKey&&e.key==="/"&&(e.preventDefault(),search.focus()),e.key==="Escape"&&(search.blur(),suggestions.classList.add("d-none"))}document.addEventListener("click",function(e){var t=suggestions.contains(e.target);t||suggestions.classList.add("d-none")}),document.addEventListener("keydown",suggestionFocus);function suggestionFocus(n){const s=suggestions.classList.contains("d-none");if(s)return;const e=[...suggestions.querySelectorAll("a")];if(e.length===0)return;const t=e.indexOf(document.activeElement);if(n.key==="ArrowUp"){n.preventDefault();const s=t>0?t-1:0;e[s].focus()}else if(n.key==="ArrowDown"){n.preventDefault();const s=t+1<e.length?t+1:t;e[s].focus()}}(function(){var e=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:"id",store:["href","title","description"],index:["title","description","content"]}});e.add({id:0,href:"/docs/pirogue/overview/",title:"Overview",description:"What a PiRogue is # The PiRogue is an open hardware device based on a Raspberry Pi operating as a network router (like any ISP router) analyzing network traffic in real time.\nIt can operate in three different modes:\n  a kiosk mode for anyone who wants to know which servers a mobile device is communicating with\n useful for non-profit that want to know if a victim is targeted by stalkerware useful for educational purposes to highlight surveillance capitalism more generally assess if a mobile device is spied/compromised by utilizing detection rules such as Suricata and others    an on-the-field mode",content:"   What a PiRogue is # The PiRogue is an open hardware device based on a Raspberry Pi operating as a network router (like any ISP router) analyzing network traffic in real time.\nIt can operate in three different modes:\n  a kiosk mode for anyone who wants to know which servers a mobile device is communicating with\n useful for non-profit that want to know if a victim is targeted by stalkerware useful for educational purposes to highlight surveillance capitalism more generally assess if a mobile device is spied/compromised by utilizing detection rules such as Suricata and others    an on-the-field mode\n for emergency response (active spying, device tampering, \u0026hellip;) useful for responders in repressive environment conduct forensics analysis and network detection using a pre-installed set of tools    an expert mode for technical people to:\n determine the list of collected data assess regulatory compliance conduct penetration testing analyze malware\u0026rsquo;s behavior ensure reproducible analysis generate comprehensive reports    "}).add({id:1,href:"/docs/pirogue/build-a-pirogue/",title:"Build a PiRogue",description:"The hardware you need # In addition to a computer and an Internet connection, you will need, at least, a Raspberry Pi (+ its power supply), a SD-card and an ethernet cable.\nPick a Raspberry Pi # First, you need a Raspberry Pi. We support the following versions of Raspberry Pi:\n Raspberry Pi 4 Model B - 2GB Raspberry Pi 4 Model B - 4GB Raspberry Pi 4 Model B - 8GB  👉  Be sure to have an appropriate power supply for your PiRogue.",content:"The hardware you need # In addition to a computer and an Internet connection, you will need, at least, a Raspberry Pi (+ its power supply), a SD-card and an ethernet cable.\nPick a Raspberry Pi # First, you need a Raspberry Pi. We support the following versions of Raspberry Pi:\n Raspberry Pi 4 Model B - 2GB Raspberry Pi 4 Model B - 4GB Raspberry Pi 4 Model B - 8GB  👉  Be sure to have an appropriate power supply for your PiRogue. If you don\u0026rsquo;t know what to choose, pick the official USB-C Raspberry Pi power supply.  If you want to buy a Raspberry Pi, visit the rpilocator website to check for availability.\nPick a micro SD-card # Second, you need a SD-card to run your PiRogue. The SD-card has to be large enough to store the operating system and all the data generated by the PiRogue itself. By default, it stores 5 days of network traffic history.\nYou may choose:\n a 32GB micro SD-card for regular use a 64GB micro SD-card if you plan doing long runs, analyzing the traffic of multiple devices simultaneously  Pick an ethernet cable # In order to connect the PiRogue to the Internet, you should have an ethernet cable connecting your PiRogue to your network. A simple cat. 5 ethernet cable will do the job.\nOptional stuff # Depending on your needs, you would want to add a hat to your PiRogue and protect everything with a case.\nBuild the PiRogue hat →\nBuild the PiRogue case →\n👉  If you don\u0026rsquo;t feel comfortable with building the case or the hat, feel free to buy one by reaching out to us.  Install PiRogue OS # Get PiRogue OS # PiRogue OS is released on GitHub and can be found in the release section of the PiRogue OS repository. The OS is pre-configured so you just need to flash it on a micro SD-card. The image (the binary file to be flashed on the SD-card) is compressed. The file you have to download on your computer has a name following this schema image_\u0026lt;year\u0026gt;-\u0026lt;month\u0026gt;-\u0026lt;day\u0026gt;-PiRogueOS-lite.img.xz.\nDownload the latest version of PiRogue OS →\nSet up your SD card # Before flashing the image, you have to unzip the image on your computer. It can be done either by right-clicking on the ZIP file and choosing Decompress or with command line using the unzip command. Once unzipped, you should have a new file named \u0026lt;year\u0026gt;-\u0026lt;month\u0026gt;-\u0026lt;day\u0026gt;-PiRogueOS-lite.img. This file is the image file you will have to flash on a micro SD-card. Linux users used to use command line can then use the dd command to flash their SD-card.\nWe advice you to download Balena Etcher and install it on your computer. Run Balena Etcher as administrator and follow the steps illustrated by the screenshots below.\nDownload Balena Etcher →\n                 \nOnce the flashing is complete, unplug the SD-card from your computer.\nSet up the PiRogue # If you have the hat for your PiRogue, it is the good time for you to plug it in and put everything into the case. Insert your freshly flashed micro SD-card into the PiRogue, plug the ethernet cable to the PiRogue. Remember, this cable connects your PiRogue directly (or through network switch) to your ISP router.\n👉  To operate properly, your PiRogue needs to have Internet access.  Fire it up! # First, check that the SD card is correctly inserted into the appropriate slot of your PiRogue and the ethernet cable is properly connected. Then, plug the power supply. Wait few minutes before trying to access your PiRogue.\nAfter few minutes, we will be able to connect a wi-fi device and use the PiRogue\u0026rsquo;s dashboard.\nFirst, connect a wi-fi device such as your smartphone to the PiRogue\u0026rsquo;s wi-fi network PiRogue1 (default password: superlongkey). Next, open the PiRogue\u0026rsquo;s dashboard by going at http://\u0026lt;PiRogue IP address\u0026gt;:3000 with your Web browser.\n⚠️  The first time your PiRogue starts, some services would fail to start. See how to check if your PiRogue is running properly.  Connect to your PiRogue with SSH →\nConnect to your PiRogue\u0026rsquo;s dashboard →\nIt would take around 4 minutes to network flows appearing in the dashboard. At the first start of your PiRogue the dashboard will look empty or broken. Don\u0026rsquo;t worry, connect a device to the PiRogue\u0026rsquo;s WiFi network, wait 5 minutes and refresh the dashboard.\n"}).add({id:2,href:"/docs/pirogue/build-a-pirogue-hat/",title:"Build a PiRogue hat",description:"The current PiRogue case version is v1.0_beta.\nGet the KiCad project and manufacturing files on GitHub →\n👉  Precision regarding some parts:\n the 2x20 header has to be in the tall version, you can buy one from Adafruit use a SPI 240x240 IPS screen like this one use CR1220 battery    Overview #",content:"The current PiRogue case version is v1.0_beta.\nGet the KiCad project and manufacturing files on GitHub →\n👉  Precision regarding some parts:\n the 2x20 header has to be in the tall version, you can buy one from Adafruit use a SPI 240x240 IPS screen like this one use CR1220 battery    Overview #         \n"}).add({id:3,href:"/docs/pirogue/build-a-pirogue-case/",title:"Build a PiRogue case",description:"The current PiRogue case version is v1.0_beta.\nGet the manufacturing files on GitHub →\n3D print a PiRogue case # To 3D print your PiRogue case, you will need:\n either the 4 separate STL files or the one containing the 4 part ready the slice a 3D printer PLA or PETG  Recommended printing parameters #  layer height: 0.2 mm infill: 20% no support material: PETG  The entire printing lasts around 3 hours for a complete case.",content:"The current PiRogue case version is v1.0_beta.\nGet the manufacturing files on GitHub →\n3D print a PiRogue case # To 3D print your PiRogue case, you will need:\n either the 4 separate STL files or the one containing the 4 part ready the slice a 3D printer PLA or PETG  Recommended printing parameters #  layer height: 0.2 mm infill: 20% no support material: PETG  The entire printing lasts around 3 hours for a complete case.\nAssemble the PiRogue case # To assemble your PiRogue case, you will need:\n the PiRogue case parts obviously 1 x M2.5 allen key 12 x M2.5 12mm hex socket bolts - see an example on McMaster 4 x M2.5 25mm female threaded hex standoffs - see an example on McMaster 4 x M2.5 hex nuts - see an example on McMaster  4 M2.5 12mm bolts and 4 M2.5 nuts are used to secure the fan in place. The 4 standoffs are placed between the Raspberry Pi and the hat.\nNext, follow the steps illustrated by the pictures below.\n                    \n"}).add({id:4,href:"/docs/pirogue/cheatsheet/",title:"Cheatsheet",description:"Default configuration #    Name Value Example of usage     SSH port 22 ssh -p22 pi@\u0026lt;PiRogue IP address\u0026gt;   SSH user pi    SSH password raspberry    Dashboard port 3000 http://\u0026lt;PiRogue IP address\u0026gt;:3000   Dashboard user admin    Dashboard password PiRogue    Wi-Fi SSID PiRogue1    Wi-Fi password superlongkey     Important files #    Name Location     SSH configuration /etc/ssh/sshd_config   Suricata configuration /etc/suricata/suricata.",content:"Default configuration #    Name Value Example of usage     SSH port 22 ssh -p22 pi@\u0026lt;PiRogue IP address\u0026gt;   SSH user pi    SSH password raspberry    Dashboard port 3000 http://\u0026lt;PiRogue IP address\u0026gt;:3000   Dashboard user admin    Dashboard password PiRogue    Wi-Fi SSID PiRogue1    Wi-Fi password superlongkey     Important files #    Name Location     SSH configuration /etc/ssh/sshd_config   Suricata configuration /etc/suricata/suricata.yaml   Suricata rules /var/lib/suricata/rules/suricata.rules   PiRogue screen /etc/pirogue/pirogue_infos_screen.py    "}).add({id:5,href:"/docs/pirogue/useful-commands/",title:"Useful commands",description:"Find the IP address of your PiRogue # On your computer connected to the same network as your PiRogue, run the following command:\nping -c1 raspberrypi.local  Example of output, in this example, the IP address of the PiRogue is 192.168.0.11:\nPING raspberrypi.local (192.168.0.11) 56(84) bytes of data. 64 bytes from raspberrypi.home (192.168.0.11): icmp_seq=1 ttl=64 time=0.319 ms --- raspberrypi.local ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 0.",content:"Find the IP address of your PiRogue # On your computer connected to the same network as your PiRogue, run the following command:\nping -c1 raspberrypi.local  Example of output, in this example, the IP address of the PiRogue is 192.168.0.11:\nPING raspberrypi.local (192.168.0.11) 56(84) bytes of data. 64 bytes from raspberrypi.home (192.168.0.11): icmp_seq=1 ttl=64 time=0.319 ms --- raspberrypi.local ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 0.319/0.319/0.319/0.000 ms  Connect to your PiRogue with SSH # This section is largely inspired by the Raspberry Pi official documentation.\nYou can use SSH to connect to your PiRogue from a Linux desktop, another PiRogue, or from an Apple Mac without installing additional software.\nOpen a terminal window on your computer replacing \u0026lt;PiRogue IP address\u0026gt; with the IP address of the PiRogue you’re trying to connect to,\nssh -p22 pi@\u0026lt;PiRogue IP address\u0026gt;  When the connection works you will see a security/authenticity warning. Type yes to continue. You will only see this warning the first time you connect.\n👉  If you receive a connection timed out error it is likely that you have entered the wrong IP address for the PiRogue.  Next you will be prompted for the password for the pi login: the default password on PiRogue OS is raspberry.\nFor security reasons it is highly recommended to change the default password on the PiRogue (also, you can not login through ssh if the password is blank). You should now be able to see the PiRogue prompt, which will be identical to the one found on the PiRogue itself.\nIf you have set up another user on the PiRogue, you can connect to it in the same way, replacing the username with your own, e.g. eben@192.168.1.5\npi@raspberrypi ~ $  You are now connected to the PiRogue remotely, and can execute commands.\nChange the password of user pi # On your PiRogue, run the following command and answer the different questions:\npasswd  Check if your PiRogue is running properly # On your PiRogue, run the following command:\nsudo systemctl list-units pirogue* grafana* suricata* influxdb*  Example of output, in this example, everything is running properly:\n UNIT LOAD ACTIVE SUB DESCRIPTION grafana-server.service loaded active running Grafana instance influxdb.service loaded active running InfluxDB is an open-source, distributed, time series database pirogue_eve_collector.service loaded active running PiRogue collector for Suricata alerts pirogue_infos_screen.service loaded active running PiRogue screen pirogue_inspect_flows.service loaded active running PiRogue DPI flow inspection suricata.service loaded active running Suricata IDS/IDP daemon pirogue_daily_maintenance.timer loaded active waiting Run PiRogue maintenance daily LOAD = Reflects whether the unit definition was properly loaded. ACTIVE = The high-level unit activation state, i.e. generalization of SUB. SUB = The low-level unit activation state, values depend on unit type. 7 loaded units listed. Pass --all to see loaded but inactive units, too. To show all installed unit files use 'systemctl list-unit-files'.  If one or several services are not running, restart them with the following command:\nsudo systemctl restart \u0026lt;service name\u0026gt;.service  Restart PiRogue services # On your PiRogue, run the following command:\nsudo systemctl restart pirogue*  Restart your PiRogue # On your PiRogue, run the following command:\nsudo reboot  Shutdown your PiRogue # On your PiRogue, run the following command:\nsudo halt  "}).add({id:6,href:"/docs/prologue/introduction/",title:"Introduction",description:"Get started # The PiRogue Tool Suite is made of two sub-systems:\n the PiRogue: hardware device for network traffic monitoring and interception the Tool Suite: a set of tool for network traffic analysis to install on your server  👉  The PiRogue can be used without the Tool Suite.   Help # Get help on PiRogue Tool Suite. Get help on Discord →",content:"Get started # The PiRogue Tool Suite is made of two sub-systems:\n the PiRogue: hardware device for network traffic monitoring and interception the Tool Suite: a set of tool for network traffic analysis to install on your server  👉  The PiRogue can be used without the Tool Suite.   Help # Get help on PiRogue Tool Suite. Get help on Discord →\n"}).add({id:7,href:"/docs/prologue/quick-start/",title:"Quick Start",description:"The PiRogue # The PiRogue is a device meant to intercept network traffic and conduct on-the-field device forensic.\nBuild your PiRogue →\nYou can buy a PiRogue from us by reaching out to us.\nThe Tool Suite # In development",content:"The PiRogue # The PiRogue is a device meant to intercept network traffic and conduct on-the-field device forensic.\nBuild your PiRogue →\nYou can buy a PiRogue from us by reaching out to us.\nThe Tool Suite # In development\n"}).add({id:8,href:"/docs/tool_suite/",title:"The tool suite",description:"The tool suite",content:""}).add({id:9,href:"/docs/pirogue/",title:"The PiRogue",description:"The PiRogue",content:""}).add({id:10,href:"/docs/prologue/",title:"Prologue",description:"Prologue",content:""}).add({id:11,href:"/docs/",title:"Documentation",description:"Documentation",content:""}),search.addEventListener("input",t,!0);function t(){const s=5;var n=this.value,o=e.search(n,{limit:s,enrich:!0});const t=new Map;for(const e of o.flatMap(e=>e.result)){if(t.has(e.doc.href))continue;t.set(e.doc.href,e.doc)}if(suggestions.innerHTML="",suggestions.classList.remove("d-none"),t.size===0&&n){const e=document.createElement("div");e.innerHTML=`No results for "<strong>${n}</strong>"`,e.classList.add("suggestion__no-results"),suggestions.appendChild(e);return}for(const[r,a]of t){const n=document.createElement("div");suggestions.appendChild(n);const e=document.createElement("a");e.href=r,n.appendChild(e);const o=document.createElement("span");o.textContent=a.title,o.classList.add("suggestion__title"),e.appendChild(o);const i=document.createElement("span");if(i.textContent=a.description,i.classList.add("suggestion__description"),e.appendChild(i),suggestions.appendChild(n),suggestions.childElementCount==s)break}}})()